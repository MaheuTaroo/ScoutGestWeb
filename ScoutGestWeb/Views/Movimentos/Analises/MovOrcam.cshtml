@model IEnumerable<ScoutGestWeb.Models.MovimentoViewModel>
@{
    Layout = null;
}

<!DOCTYPE html>
<html translate="no">
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <title>@ViewData["TituloAnalise"]</title>
</head>
<body class="bg-white">
    <style>
        tr {
            page-break-inside: avoid;
            page-break-after: auto;
            text-align: center;
        }
        body {
            overflow: initial;
            text-align: center;
        }
    </style>
    <div class="container-fluid bg-light text-center border-primary header p-1">
        <h1 style="color:rgb(82, 82, 82); margin-top: auto"><img src="~/imgs/logo.png" style="width: 3%; margin: 3px 0px 3px 0px;"><br />ScoutGest</h1>
    </div>
    <h2>Atividade: @ViewData["atividade"]</h2>
    <table class="table">
        <thead>
            <tr>
                <th>ID de mov.</th>
                <th>Caixa</th>
                <th>Documento</th>
                <th>Secção</th>
                <th>Tipo de mov.</th>
                <th>Data</th>
                <th>Valor</th>
                <th>Tipo de pag.</th>
                <th>Descrição</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.IDMovimento)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IDCaixa)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IDDocumento)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Seccao)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TipoMovimento)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DataHora.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Valor)€
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TipoPagamento)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Descricao)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div style="position: absolute; text-align: center; width: 100%">
        <div style="float: left; margin: 25%"><b>Orçamento</b>: @ViewData["orcamento"]€</div>
        <div style="float: right; margin: 25%"><b>Tot. movimentos</b>: @Model.Sum(x => x.Valor)€</div>
        <br />
        <div class="container-fluid">
            @if (decimal.Parse(ViewData["orcamento"].ToString()) - Model.Sum(x => x.Valor) > 0)
            {
                <p style="color: red"><b>Dinheiro em falta</b>: @(decimal.Parse(ViewData["orcamento"].ToString()) - Model.Sum(x => x.Valor))</p>
            }
            else if (decimal.Parse(ViewData["orcamento"].ToString()) - Model.Sum(x => x.Valor) < 0)
            {
                <p style="color: green"><b>Dinheiro a mais</b>: @Math.Abs(decimal.Parse(ViewData["orcamento"].ToString()) - Model.Sum(x => x.Valor))</p>
            }
            else
            {
                <p style="color: blue"><b>Dinheiro em falta</b>: 0€</p>
            }
        </div>
    </div>
</body>
</html>