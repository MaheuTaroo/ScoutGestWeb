@model IEnumerable<ScoutGestWeb.Models.AtividadeViewModel>
@{
    ViewData["Title"] = "Atividades";
}

@if (User.IsInRole("Administração de Agrupamento"))
{
    <div>
        <aside class="sidenav">
            <br />
            <div style="padding: 3px 3px 6px 3px">
                <h4>Atividades</h4>
                <hr />
                <ul>
                    <li class="linksAtivs">
                        <a asp-action="InserirAtividade">Nova atividade</a>
                        <br />
                    </li>
                </ul>
                <hr />
            </div>
        </aside>
    </div>
    <div style="margin-left: 12vw; text-align: center">
        <h1>Planeamento das atividades</h1>
        <div class="bg-danger rounded">@Html.ValidationSummary(false)</div>
        <div style="text-align: center">
            @using (Html.BeginForm("Index", "Atividades", FormMethod.Get))
            {
                <select name="coluna">
                    <option>Nome</option>
                    <option>Tipo</option>
                    <option>Tema</option>
                    @if (User.IsInRole("Administração de Agrupamento"))
                    {
                        <option>Secção</option>
                    }
                    <option>Local</option>
                    <option>Data inicial</option>
                    <option>Data final</option>
                    <option>Orçamento</option>
                    <option>Aberta a movimentos</option>
                </select>
                <input name="procura" />
                <input type="submit" value="Procurar" class="btn btn-success" />
            }
        </div>
        @if (User.IsInRole("Administração de Agrupamento") || User.IsInRole("Equipa de Animação"))
        {
            <div style="text-align: center">
                @foreach (var item in Model)
                {
                <div class="container-fluid" style="padding: 0 0 0 0">
                    <p>
                        <h2>
                            @Html.DisplayFor(modelItem => item.Nome)
                        </h2>
                    </p>
                    <p>
                        <h5>
                            De @Html.DisplayFor(modelItem => item.DataInicio) até @Html.DisplayFor(modelItem => item.DataFim)
                        </h5>
                    </p>
                    <a href="@Url.ActionLink("Detalhes", "Atividades", new { id = item.IDAtividade })"><button class="btn btn-secondary text-white">Detalhes</button></a>
                    @if (User.IsInRole("Administração de Agrupamento"))
                    {
                        <span>&#32;</span><a href="@Url.ActionLink("Eliminar", "Atividades", new { id = item.IDAtividade })"><button class="btn btn-secondary text-white">Eliminar</button></a>
                    }

                </div>
                }
            </div>
        }
        else
        {
            DateTime dl = DateTime.Now;
            string.Format("{0}/{1}/{2}", dl.Date.Day, dl.Date.Month, dl.Date.Year);
            foreach (var item in Model)
            {
                if (item.DataInicio >= DateTime.Today.AddMonths(-1) && item.DataInicio <= DateTime.Today.AddSeconds(-1))
                {
                    <div class="container-fluid" style="text-align: center">
                        <h3 class="text-center">Atividade(s) do último mês</h3>
                        <hr />
                        <div style="padding: 0; width: 100%;">
                            <p>
                                <h2>
                                    @Html.DisplayFor(modelItem => item.Nome)
                                </h2>
                            </p>
                            <p>
                                <h5>
                                    De @Html.DisplayFor(modelItem => item.DataInicio) até @Html.DisplayFor(modelItem => item.DataFim)
                                </h5>
                            </p>
                            <a href="@Url.ActionLink("Detalhes", "Atividades", new { id = item.IDAtividade })"><button class="btn btn-secondary text-white">Detalhes</button></a>
                        </div>
                    </div>
                }
                if (item.DataInicio >= DateTime.Today && item.DataInicio <= DateTime.Today + new TimeSpan(23, 59, 59))
                {
                    <div class="container-fluid">
                        <h3 class="text-center">Atividade(s) de hoje</h3>
                        <hr />
                        <div style="padding: 0; width: 100%; text-align: center">
                            <p>
                                <h2>
                                    @Html.DisplayFor(modelItem => item.Nome)
                                </h2>
                            </p>
                            <p>
                                <h5>
                                    De @Html.DisplayFor(modelItem => item.DataInicio) até @Html.DisplayFor(modelItem => item.DataFim)
                                </h5>
                            </p>
                            <a href="@Url.ActionLink("Detalhes", "Atividades", new { id = item.IDAtividade })"><button class="btn btn-secondary text-white">Detalhes</button></a>
                        </div>
                    </div>
                }
                if (item.DataInicio >= DateTime.Today.AddDays(1) && item.DataInicio <= DateTime.Today.AddMonths(1))
                {
                    <div class="container-fluid">
                        <h3 class="text-center">Atividade(s) do próximo mês</h3>
                        <hr />
                        <div style="padding: 0; width: 100%; text-align: center">
                            <p>
                                <h2>
                                    @Html.DisplayFor(modelItem => item.Nome)
                                </h2>
                            </p>
                            <p>
                                <h5>
                                    De @Html.DisplayFor(modelItem => item.DataInicio) até @Html.DisplayFor(modelItem => item.DataFim)
                                </h5>
                            </p>
                            <a href="@Url.ActionLink("Detalhes", "Atividades", new { id = item.IDAtividade })"><button class="btn btn-secondary text-white">Detalhes</button></a>
                        </div>
                    </div>
                }
            }
        }
    </div>
}
else
{
    <div style="text-align: center">
        <h1>Planeamento das atividades</h1>
        <div style="text-align: center">
            @using (Html.BeginForm("Index", "Atividades", FormMethod.Get))
            {
                <select name="coluna">
                    <option>Nome</option>
                    <option>Tipo</option>
                    <option>Tema</option>
                    @if (User.IsInRole("Administração de Agrupamento"))
                    {
                        <option>Secção</option>
                    }
                    <option>Local</option>
                    <option>Data inicial</option>
                    <option>Data final</option>
                    <option>Orçamento</option>
                    <option>Aberta a movimentos</option>
                </select>
                <input name="procura" />
                <input type="submit" value="Procurar" class="btn btn-success" />
            }
        </div>
        @if (User.IsInRole("Administração de Agrupamento") || User.IsInRole("Equipa de Animação"))
        {
            <div style="text-align: center">
                @foreach (var item in Model)
                {
                    <div class="container-fluid" style="padding: 0 0 0 0">
                        <p>
                            <h2>
                                @Html.DisplayFor(modelItem => item.Nome)
                            </h2>
                        </p>
                        <p>
                            <h5>
                                De @Html.DisplayFor(modelItem => item.DataInicio) até @Html.DisplayFor(modelItem => item.DataFim)
                            </h5>
                        </p>
                        <a href="@Url.ActionLink("Detalhes", "Atividades", new { id = item.IDAtividade })"><button class="btn btn-secondary text-white">Detalhes</button></a>
                    </div>
                }
            </div>
        }
        else
        {
            DateTime dl = DateTime.Now;
            string.Format("{0}/{1}/{2}", dl.Date.Day, dl.Date.Month, dl.Date.Year);
            foreach (var item in Model)
            {
                if (item.DataInicio >= DateTime.Today.AddMonths(-1) && item.DataInicio <= DateTime.Today.AddSeconds(-1))
                {
                    <div class="container-fluid" style="text-align: center">
                        <h3 class="text-center">Atividade(s) do último mês</h3>
                        <hr />
                        <div style="padding: 0; width: 100%;">
                            <p>
                                <h2>
                                    @Html.DisplayFor(modelItem => item.Nome)
                                </h2>
                            </p>
                            <p>
                                <h5>
                                    De @Html.DisplayFor(modelItem => item.DataInicio) até @Html.DisplayFor(modelItem => item.DataFim)
                                </h5>
                            </p>
                            <a href="@Url.ActionLink("Detalhes", "Atividades", new { id = item.IDAtividade })"><button class="btn btn-secondary text-white">Detalhes</button></a>
                        </div>
                    </div>
                }
                if (item.DataInicio >= DateTime.Today && item.DataInicio <= DateTime.Today + new TimeSpan(23, 59, 59))
                {
                    <div class="container-fluid">
                        <h3 class="text-center">Atividade(s) de hoje</h3>
                        <hr />
                        <div style="padding: 0; width: 100%; text-align: center">
                            <p>
                                <h2>
                                    @Html.DisplayFor(modelItem => item.Nome)
                                </h2>
                            </p>
                            <p>
                                <h5>
                                    De @Html.DisplayFor(modelItem => item.DataInicio) até @Html.DisplayFor(modelItem => item.DataFim)
                                </h5>
                            </p>
                            <a href="@Url.ActionLink("Detalhes", "Atividades", new { id = item.IDAtividade })"><button class="btn btn-secondary text-white">Detalhes</button></a>
                        </div>
                    </div>
                }
                if (item.DataInicio >= DateTime.Today.AddDays(1) && item.DataInicio <= DateTime.Today.AddMonths(1))
                {
                    <div class="container-fluid">
                        <h3 class="text-center">Atividade(s) do próximo mês</h3>
                        <hr />
                        <div style="padding: 0; width: 100%; text-align: center">
                            <p>
                                <h2>
                                    @Html.DisplayFor(modelItem => item.Nome)
                                </h2>
                            </p>
                            <p>
                                <h5>
                                    De @Html.DisplayFor(modelItem => item.DataInicio) até @Html.DisplayFor(modelItem => item.DataFim)
                                </h5>
                            </p>
                            <a href="@Url.ActionLink("Detalhes", "Atividades", new { id = item.IDAtividade })"><button class="btn btn-secondary text-white">Detalhes</button></a>
                        </div>
                    </div>
                }
            }
        }
    </div>
}